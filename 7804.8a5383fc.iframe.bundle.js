"use strict";(self.webpackChunk_revolancer_ui=self.webpackChunk_revolancer_ui||[]).push([[7804],{"./node_modules/react-interactive/dist/react-interactive.esm.js":(__unused_webpack_module,__webpack_exports__,__webpack_require__)=>{__webpack_require__.d(__webpack_exports__,{vj:()=>Interactive});var react=__webpack_require__("./node_modules/react/index.js");let recentTouchTimeoutId,recentEventFrom="key",recentFocusFrom=recentEventFrom,recentTouch=!1,recentMouse=!1,recentWindowFocus=!1;const setRecentEventFromTouch=touchDelay=>{recentTouch=!0,recentEventFrom="touch",window.clearTimeout(recentTouchTimeoutId),recentTouchTimeoutId=window.setTimeout((()=>{recentTouch=!1}),touchDelay)};let recentMouseTimeoutId;const setRecentEventFromMouse=()=>{recentMouse=!0,recentEventFrom="mouse",window.clearTimeout(recentMouseTimeoutId),recentMouseTimeoutId=window.setTimeout((()=>{recentMouse=!1}),200)},handleTouchEvent=touchDelay=>()=>setRecentEventFromTouch(touchDelay),handlePointerEvent=touchDelay=>e=>{switch(e.pointerType){case"mouse":setRecentEventFromMouse();break;case"pen":case"touch":setRecentEventFromTouch(touchDelay)}},handleMouseEvent=()=>{recentTouch||setRecentEventFromMouse()},handleKeyEvent=()=>{recentEventFrom="key"};let recentWindowFocusTimeoutId;const handleWindowFocusEvent=e=>{e.target!==window&&e.target!==document||(recentWindowFocus=!0,window.clearTimeout(recentWindowFocusTimeoutId),recentWindowFocusTimeoutId=window.setTimeout((()=>{recentWindowFocus=!1}),300))},listenerOptions={capture:!0,passive:!0},documentListeners=[["touchstart",handleTouchEvent(750)],["touchend",handleTouchEvent(300)],["touchcancel",handleTouchEvent(300)],["pointerenter",handlePointerEvent(300)],["pointerover",handlePointerEvent(300)],["pointerout",handlePointerEvent(300)],["pointerleave",handlePointerEvent(300)],["pointerdown",handlePointerEvent(750)],["pointerup",handlePointerEvent(300)],["pointercancel",handlePointerEvent(300)],["mouseenter",handleMouseEvent],["mouseover",handleMouseEvent],["mouseout",handleMouseEvent],["mouseleave",handleMouseEvent],["mousedown",handleMouseEvent],["mouseup",handleMouseEvent],["keydown",handleKeyEvent],["keyup",handleKeyEvent],["focus",()=>{(!recentWindowFocus||recentMouse||recentTouch)&&(recentFocusFrom=recentEventFrom)}]];"undefined"!=typeof window&&"undefined"!=typeof document&&(documentListeners.forEach((([eventName,eventHandler])=>{document.addEventListener(eventName,eventHandler,listenerOptions)})),window.addEventListener("focus",handleWindowFocusEvent,listenerOptions));const eventFrom=event=>{switch(event.pointerType){case"mouse":setRecentEventFromMouse();break;case"pen":case"touch":recentTouch?recentEventFrom="touch":setRecentEventFromTouch(300)}return/mouse/.test(event.type)&&!recentTouch&&setRecentEventFromMouse(),/touch/.test(event.type)&&(recentTouch?recentEventFrom="touch":setRecentEventFromTouch(300)),/focus/.test(event.type)?recentFocusFrom:recentEventFrom},enterKeyTrigger=({tagName,type})=>"SELECT"!==tagName&&("INPUT"!==tagName||"checkbox"!==type&&"radio"!==type),spaceKeyTrigger=({tagName,type})=>["BUTTON","SELECT"].includes(tagName)||"INPUT"===tagName&&["checkbox","radio","submit"].includes(type),elementSupportsDisabled=({tagName})=>["BUTTON","INPUT","SELECT","TEXTAREA","FIELDSET"].includes(tagName),classNameToString=className=>"string"==typeof className||"object"==typeof className&&null!==className||"number"==typeof className||"bigint"==typeof className?String(className):"";let pendingUserSelectReset=!1;const resetUserSelect=()=>{pendingUserSelectReset=!0,window.setTimeout((()=>{pendingUserSelectReset&&(document.body.style.userSelect="",document.body.style.webkitUserSelect="")}),250)},initialState={hover:!1,active:!1,focus:!1},eventMap={mouseover:"onMouseOver",mouseleave:"onMouseLeave",mousedown:"onMouseDown",mouseup:"onMouseUp",pointerover:"onPointerOver",pointerleave:"onPointerLeave",pointerdown:"onPointerDown",pointerup:"onPointerUp",pointercancel:"onPointerCancel",touchstart:"onTouchStart",touchend:"onTouchEnd",touchcancel:"onTouchCancel",keydown:"onKeyDown",keyup:"onKeyUp",focus:"onFocus",blur:"onBlur",dragstart:"onDragStart",dragend:"onDragEnd"},eventListenerPropNames=Object.values(eventMap),InteractiveNotMemoized=react.forwardRef((function({as,children,onStateChange,disabled=!1,useExtendedTouchActive=!1,hoverClassName="hover",activeClassName="active",mouseActiveClassName="mouseActive",touchActiveClassName="touchActive",keyActiveClassName="keyActive",focusClassName="focus",focusFromKeyClassName="focusFromKey",focusFromMouseClassName="focusFromMouse",focusFromTouchClassName="focusFromTouch",disabledClassName="disabled",hoverStyle,activeStyle,mouseActiveStyle,touchActiveStyle,keyActiveStyle,focusStyle,focusFromKeyStyle,focusFromMouseStyle,focusFromTouchStyle,disabledStyle,...restProps},ref){const As=as||"button",[iState,setIState]=react.useState({state:initialState,prevState:initialState}),inTouchActiveState="touchActive"===iState.state.active;react.useEffect((()=>{onStateChange&&onStateChange(iState)}),[iState.state.hover,iState.state.active,iState.state.focus]);const disabledAndAsComponent=react.useRef(!1);disabledAndAsComponent.current=disabled&&"string"!=typeof As;const[,forceUpdateDisabledComponent]=react.useState(!1),localRef=react.useRef(null),callbackRef=react.useCallback((node=>{localRef.current=node,"function"==typeof ref?ref(node):ref&&(ref.current=node),disabledAndAsComponent.current&&forceUpdateDisabledComponent((s=>!s))}),[ref]),keyTracking=react.useRef({enterKeyDown:!1,spaceKeyDown:!1}),dragTracking=react.useRef({isDragging:!1}),stateChange=react.useCallback(((...changes)=>{setIState((previous=>{const newState={...previous.state};changes.forEach((({iStateKey,state,action})=>{"enter"===action?newState[iStateKey]=state:"exit"!==action||previous.state[iStateKey]!==state||dragTracking.current.isDragging&&"active"===iStateKey||(newState[iStateKey]=!1)}));const newInteractiveStateChange={state:newState,prevState:previous.state};return(({state,prevState})=>state.hover!==prevState.hover||state.active!==prevState.active||state.focus!==prevState.focus)(newInteractiveStateChange)?newInteractiveStateChange:previous}))}),[]),blurInteractive=react.useCallback((()=>{keyTracking.current.enterKeyDown=!1,keyTracking.current.spaceKeyDown=!1,stateChange({iStateKey:"focus",state:!1,action:"enter"},{iStateKey:"active",state:"keyActive",action:"exit"})}),[stateChange]);react.useEffect((()=>{disabled&&iState.state.focus&&(elementSupportsDisabled(localRef.current||{})||"string"==typeof As)&&(localRef.current&&"function"==typeof localRef.current.blur&&localRef.current.blur(),blurInteractive())}),[disabled,iState.state.focus,blurInteractive,As]);const handleEvent=react.useCallback((e=>{switch(e.type){case"focus":e.target===localRef.current&&stateChange({iStateKey:"focus",state:`focusFrom${eventFrom(e).replace(/^\w/,(c=>c.toUpperCase()))}`,action:"enter"});break;case"blur":blurInteractive();break;case"keydown":case"keyup":if(" "===e.key)keyTracking.current.spaceKeyDown="keydown"===e.type;else{if("Enter"!==e.key)break;keyTracking.current.enterKeyDown="keydown"===e.type}stateChange({iStateKey:"active",state:"keyActive",action:keyTracking.current.enterKeyDown&&enterKeyTrigger(localRef.current||{})||keyTracking.current.spaceKeyDown&&spaceKeyTrigger(localRef.current||{})?"enter":"exit"});break;case"dragstart":dragTracking.current.isDragging=!0,stateChange({iStateKey:"active",state:`${eventFrom(e)}Active`,action:"enter"});break;case"dragend":dragTracking.current.isDragging=!1,stateChange({iStateKey:"active",state:!1,action:"enter"});break;default:switch(eventFrom(e)){case"mouse":switch(e.type){case"mouseover":case"pointerover":stateChange({iStateKey:"hover",state:!0,action:"enter"});break;case"mouseleave":case"pointerleave":case"pointercancel":stateChange({iStateKey:"hover",state:!1,action:"enter"},{iStateKey:"active",state:"mouseActive",action:"exit"});break;case"mousedown":case"pointerdown":stateChange({iStateKey:"active",state:"mouseActive",action:"enter"});break;case"mouseup":case"pointerup":stateChange({iStateKey:"active",state:"mouseActive",action:"exit"})}break;case"touch":switch(e.type){case"touchstart":case"pointerdown":stateChange({iStateKey:"active",state:"touchActive",action:"enter"});break;case"touchend":case"touchcancel":case"pointerup":case"pointercancel":case"mouseover":useExtendedTouchActive&&!["touchend","touchcancel"].includes(e.type)||stateChange({iStateKey:"active",state:"touchActive",action:"exit"});break;case"mouseleave":stateChange({iStateKey:"hover",state:!1,action:"enter"},{iStateKey:"active",state:"mouseActive",action:"exit"})}}}restProps[eventMap[e.type]]&&restProps[eventMap[e.type]](e)}),[...eventListenerPropNames.map((listenerPropName=>restProps[listenerPropName])),useExtendedTouchActive,stateChange,blurInteractive]),eventListeners={};eventListenerPropNames.forEach((listenerPropName=>{eventListeners[listenerPropName]=handleEvent}));const touchActiveTimeoutId=react.useRef(void 0);react.useEffect((()=>{if(inTouchActiveState&&!useExtendedTouchActive)return touchActiveTimeoutId.current=window.setTimeout((()=>{stateChange({iStateKey:"active",state:"touchActive",action:"exit"})}),750),()=>window.clearTimeout(touchActiveTimeoutId.current)}),[inTouchActiveState,useExtendedTouchActive,stateChange]),react.useEffect((()=>{if(inTouchActiveState&&useExtendedTouchActive)return pendingUserSelectReset=!1,document.body.style.userSelect="none",document.body.style.webkitUserSelect="none",resetUserSelect}),[inTouchActiveState,useExtendedTouchActive]);let className=classNameToString(restProps.className);const style={};!disabled&&(({tagName,type},hasOnClickHandler)=>["BUTTON","A","AREA","SELECT"].includes(tagName)||"INPUT"===tagName&&["checkbox","radio","submit"].includes(type)||"INPUT"!==tagName&&"TEXTAREA"!==tagName&&hasOnClickHandler)(localRef.current||{},Boolean(restProps.onClick||restProps.onClickCapture))&&(style.cursor="pointer"),Object.assign(style,restProps.style);const addToClassAndStyleProps=(addClassName,addStyle)=>{className=[className,classNameToString(addClassName)].filter((cN=>cN)).join(" "),Object.assign(style,addStyle)};if(disabled)addToClassAndStyleProps(disabledClassName,disabledStyle);else{if(iState.state.hover&&addToClassAndStyleProps(hoverClassName,hoverStyle),iState.state.active)switch(addToClassAndStyleProps(activeClassName,activeStyle),iState.state.active){case"mouseActive":addToClassAndStyleProps(mouseActiveClassName,mouseActiveStyle);break;case"touchActive":addToClassAndStyleProps(touchActiveClassName,touchActiveStyle);break;case"keyActive":addToClassAndStyleProps(keyActiveClassName,keyActiveStyle)}if(iState.state.focus)switch(addToClassAndStyleProps(focusClassName,focusStyle),iState.state.focus){case"focusFromMouse":addToClassAndStyleProps(focusFromMouseClassName,focusFromMouseStyle);break;case"focusFromTouch":addToClassAndStyleProps(focusFromTouchClassName,focusFromTouchStyle);break;case"focusFromKey":addToClassAndStyleProps(focusFromKeyClassName,focusFromKeyStyle)}}const memoizedStyle=react.useMemo((()=>style),[Object.entries(style).join()]);let disabledProps=null;return disabled&&(disabledProps={onClick:void 0,onClickCapture:void 0,onDoubleClick:void 0,onDoubleClickCapture:void 0,tabIndex:void 0,href:void 0},elementSupportsDisabled("string"==typeof As?{tagName:As.toUpperCase()}:localRef.current||{})&&(disabledProps.disabled=!0)),react.createElement(As,Object.assign({},restProps,eventListeners,disabledProps,{className:""===className?void 0:className,style:memoizedStyle,ref:callbackRef}),"function"==typeof children?children(iState.state):children)})),Interactive=Object.assign(react.memo(InteractiveNotMemoized),{Button:react.memo(InteractiveNotMemoized),A:createInteractive("a"),Input:createInteractive("input"),Select:createInteractive("select"),Div:createInteractive("div"),Span:createInteractive("span")});function createInteractive(as){return react.forwardRef((function(props,ref){return react.createElement(Interactive,Object.assign({},props,{as,ref}))}))}}}]);